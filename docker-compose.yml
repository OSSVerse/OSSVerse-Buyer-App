version: '3'
services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    restart: always
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - mongo-express
    ports:
      - 8000:8000



# version: "3.1"

# services:
#   mongo:
#     image: mongo:latest
#     environment:
#       MONGODB_DATABASE: test
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     ports:
#       - 27017:27017

#   mongo-express:
#     image: mongo-express
#     environment:
#       ME_CONFIG_MONGODB_SERVER: mongo
#       ME_CONFIG_MONGODB_PORT: 27017
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#     depends_on:
#       - mongo
#     ports:
#       - 8081:8081

# version: '3.1'

# services:

#   mongo:
#     image: mongo
#     container_name: mongo
#     restart: always
#     ports:
#       - 27017:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example

#   mongo-express:
#     image: mongo-express
#     container_name: mongo-express
#     restart: always
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#       ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#     depends_on:
#       - mongo